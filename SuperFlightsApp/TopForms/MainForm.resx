<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="minimizeBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAGA0lEQVR4Xu3dsWoUURTH4X9nBLUTInZC
        7Az4MJr4OGkUgnXUGB/GRkUsBN/AYKGWKmgslAMLwuWKidnZuSHfB7/+THVmd2bvJgAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMI8rSe4leZrkdZJPSY6S
        /JIk6RxWO7B2Ye3E/STbSS63y/Msu5nkWZJvnYuXJEl/ql15kGSjXaZnycUkD5P87FygJEn6e/XtwG6S
        tXa5jq7uXN51LkiSJB2/l0mutUt2VLcXzzTai5AkSSfvMMlmu2xHU5/8LX9JkpZb3QSst0t3FPWc4m1n
        aEmSdPreLN6vG0698NcOK0mSltdOu3znVj/187a/JEnT9mW0RwH1O/92SEmStPz22iU8lzrhzyE/kiSt
        pq+jnBhYx/u2w0mSpOnaapfxHOps/3YwSZI0XU/aZTyH+hODdjBJkjRddULg7D53BpMkSdP1sV3Gc/jR
        GUySJE3X93YZz8ENgCRJq22IGwCPACRJWm1DPALwEqAkSattiJcA9zuDSZKk6XrcLuM5bHcGkyRJ03Wn
        XcZzuLQ4lrAdTpIkLb/aubV7h3DQGVCSJC2/evQ+jI0kR50hJUnS8qqf3t9ol/DcdjuDSpKk5fWgXb4j
        WFv8LKEdVpIknb4XSS60y3cU60ned4aWJEn/34ck19ulO5rNJIed4SVJ0smrD9a32mU7qqtJnncuQpIk
        Hb/62r++XT9T6jnFjjMCJEk6cfW2//2Rn/kfR9257LkRkCTpn9WufDLiT/1Oo04t2lqcX/xq8U9G/kpY
        knReqx1Yu7B24qMkd0c64Q8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAgPPlNyh/6pIi/ypXAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        Z2YAAAAASUVORK5CYII=
</value>
  </data>
</root>